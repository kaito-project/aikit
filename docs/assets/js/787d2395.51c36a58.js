"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[552],{1953:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});var a=n(4848),s=n(8453);const r={title:"Packaging Models as OCI Artifacts"},o=void 0,t={id:"packaging",title:"Packaging Models as OCI Artifacts",description:"This feature might change without preserving backwards compatibility.",source:"@site/docs/packaging.md",sourceDirName:".",slug:"/packaging",permalink:"/aikit/docs/packaging",draft:!1,unlisted:!1,editUrl:"https://github.com/kaito-project/aikit/blob/main/website/docs/docs/packaging.md",tags:[],version:"current",frontMatter:{title:"Packaging Models as OCI Artifacts"},sidebar:"sidebar",previous:{title:"Fine Tuning",permalink:"/aikit/docs/fine-tune"},next:{title:"Vision",permalink:"/aikit/docs/vision"}},c={},l=[{value:"Overview",id:"overview",level:2},{value:"Sources Supported",id:"sources-supported",level:2},{value:"Modelpack Target (<code>packager/modelpack</code>)",id:"modelpack-target-packagermodelpack",level:2},{value:"Layer Categorization",id:"layer-categorization",level:3},{value:"Packaging Modes (<code>--build-arg layer_packaging=</code>)",id:"packaging-modes---build-arg-layer_packaging",level:3},{value:"Media Types &amp; Specification",id:"media-types--specification",level:3},{value:"Generic Target (<code>packager/generic</code>)",id:"generic-target-packagergeneric",level:2},{value:"Output Modes",id:"output-modes",level:3},{value:"Media Types (Generic)",id:"media-types-generic",level:3},{value:"Pushing models to a registry",id:"pushing-models-to-a-registry",level:2},{value:"Pulling models from a registry",id:"pulling-models-from-a-registry",level:2},{value:"Private Hugging Face Models",id:"private-hugging-face-models",level:2},{value:"Download exclusions (<code>--build-arg exclude=</code>)",id:"download-exclusions---build-arg-exclude",level:2},{value:"What&#39;s next?",id:"whats-next",level:2}];function d(e){const i={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.admonition,{title:"Experimental Feature",type:"caution",children:(0,a.jsx)(i.p,{children:"This feature might change without preserving backwards compatibility."})}),"\n",(0,a.jsx)(i.p,{children:"AIKit can package large language models into Open Container Initiative (OCI) artifacts. This enables distribution of models through any OCI\u2011compliant registry."}),"\n",(0,a.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(i.p,{children:"AIKit provides an extensible OCI packaging system. At this time, two explicit build targets are provided:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"packager/modelpack"})," \u2013 produces OCI artifacts that are compliant with CNCF sandbox project ",(0,a.jsx)(i.a,{href:"https://github.com/modelpack/model-spec",children:"ModelPack"})," specifications."]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"packager/generic"})," \u2013 produces generic OCI artifacts."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"sources-supported",children:"Sources Supported"}),"\n",(0,a.jsxs)(i.p,{children:["Specify the source with ",(0,a.jsx)(i.code,{children:"--build-arg source="}),":"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Local context directory (default if omitted)"}),"\n",(0,a.jsxs)(i.li,{children:["Subdirectory of context: ",(0,a.jsx)(i.code,{children:"subdir/"})]}),"\n",(0,a.jsx)(i.li,{children:"Single local file"}),"\n",(0,a.jsxs)(i.li,{children:["Remote ",(0,a.jsx)(i.code,{children:"HTTP"}),"/",(0,a.jsx)(i.code,{children:"HTTPS"})," file URL"]}),"\n",(0,a.jsxs)(i.li,{children:["Hugging Face model: ",(0,a.jsx)(i.code,{children:"huggingface://<org>/<repo>"})," optionally with revision ",(0,a.jsx)(i.code,{children:"@<rev>"})]}),"\n"]}),"\n",(0,a.jsxs)(i.h2,{id:"modelpack-target-packagermodelpack",children:["Modelpack Target (",(0,a.jsx)(i.code,{children:"packager/modelpack"}),")"]}),"\n",(0,a.jsx)(i.p,{children:"Command example:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-shell",children:'docker buildx build \\\n  --build-arg BUILDKIT_SYNTAX=ghcr.io/kaito-project/aikit/aikit:latest \\\n  --target packager/modelpack \\\n  --build-arg source=huggingface://Qwen/Qwen3-0.6B \\\n  --build-arg name=qwen3 \\\n  --output=qwen -<<<""\n'})}),"\n",(0,a.jsxs)(i.p,{children:["See ",(0,a.jsx)(i.a,{href:"#pushing-models-to-a-registry",children:"Pushing to a Registry"})," for instructions on how to push the resulting OCI layout to a remote registry."]}),"\n",(0,a.jsx)(i.h3,{id:"layer-categorization",children:"Layer Categorization"}),"\n",(0,a.jsx)(i.p,{children:"Files are deterministically classified into lists:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["weights: ",(0,a.jsx)(i.code,{children:"*.safetensors"}),", ",(0,a.jsx)(i.code,{children:"*.bin"}),", ",(0,a.jsx)(i.code,{children:"*.gguf"}),", ",(0,a.jsx)(i.code,{children:"*.pt"}),", ",(0,a.jsx)(i.code,{children:"*.ckpt"}),", plus any other unknown file that's larger than 10MiB"]}),"\n",(0,a.jsx)(i.li,{children:"config: tokenizer/config JSON & small text/json defaults"}),"\n",(0,a.jsx)(i.li,{children:"docs: readme/license/markdown"}),"\n",(0,a.jsxs)(i.li,{children:["code: ",(0,a.jsx)(i.code,{children:"*.py"}),", ",(0,a.jsx)(i.code,{children:"*.sh"}),", ",(0,a.jsx)(i.code,{children:"*.ipynb"}),", ",(0,a.jsx)(i.code,{children:"*.go"}),", ",(0,a.jsx)(i.code,{children:"*.js"}),", ",(0,a.jsx)(i.code,{children:"*.ts"})]}),"\n",(0,a.jsxs)(i.li,{children:["dataset: ",(0,a.jsx)(i.code,{children:"*.csv"}),", ",(0,a.jsx)(i.code,{children:"*.tsv"}),", ",(0,a.jsx)(i.code,{children:"*.jsonl"}),", ",(0,a.jsx)(i.code,{children:"*.parquet"}),", ",(0,a.jsx)(i.code,{children:"*.arrow"}),", ",(0,a.jsx)(i.code,{children:"*.h5"}),", ",(0,a.jsx)(i.code,{children:"*.npz"})]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Each category forms one or more layers depending on packaging mode (see below). Metadata (file path, size, optional bundle counts) is embedded as JSON annotations per layer."}),"\n",(0,a.jsxs)(i.h3,{id:"packaging-modes---build-arg-layer_packaging",children:["Packaging Modes (",(0,a.jsx)(i.code,{children:"--build-arg layer_packaging="}),")"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"raw"})," \u2013 every file becomes an individual layer"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"tar"})," \u2013 categories (except weights) are aggregated into a tar; weights individually tarred"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"tar+gzip"})," \u2013 same as tar but gzip compressed"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"tar+zstd"})," \u2013 same as tar but zstd compressed"]}),"\n"]}),"\n",(0,a.jsx)(i.h3,{id:"media-types--specification",children:"Media Types & Specification"}),"\n",(0,a.jsxs)(i.p,{children:["AIKit's Modelpack target implements the CNCF sandbox project ",(0,a.jsx)(i.a,{href:"https://github.com/modelpack/model-spec/blob/main/docs/spec.md",children:"ModelPack specification"}),"."]}),"\n",(0,a.jsxs)(i.h2,{id:"generic-target-packagergeneric",children:["Generic Target (",(0,a.jsx)(i.code,{children:"packager/generic"}),")"]}),"\n",(0,a.jsx)(i.p,{children:"General purpose packaging for arbitrary files."}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:'docker buildx build \\\n  --build-arg BUILDKIT_SYNTAX=ghcr.io/kaito-project/aikit/aikit:latest \\\n  --target packager/generic \\\n  --build-arg source=https://example.com/model.bin \\\n  --build-arg name=example \\\n  --build-arg layer_packaging=raw \\\n  --output=example -<<<""\n'})}),"\n",(0,a.jsxs)(i.p,{children:["See ",(0,a.jsx)(i.a,{href:"#pushing-models-to-a-registry",children:"Pushing to a Registry"})," for instructions on how to push the resulting OCI layout to a remote registry."]}),"\n",(0,a.jsx)(i.h3,{id:"output-modes",children:"Output Modes"}),"\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"--build-arg generic_output_mode=files"})," produces a direct copy of the resolved source tree (no layout transformation). Otherwise the generic script builds an OCI layout with either per\u2011file (",(0,a.jsx)(i.code,{children:"raw"}),") or single aggregated archive layer (",(0,a.jsx)(i.code,{children:"tar"}),", ",(0,a.jsx)(i.code,{children:"tar+gzip"}),", ",(0,a.jsx)(i.code,{children:"tar+zstd"}),")."]}),"\n",(0,a.jsx)(i.h3,{id:"media-types-generic",children:"Media Types (Generic)"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["Raw mode now assigns layer media type: ",(0,a.jsx)(i.code,{children:"application/octet-stream"})]}),"\n",(0,a.jsxs)(i.li,{children:["Tar / compressed modes: standard image layer media type (",(0,a.jsx)(i.code,{children:"application/vnd.oci.image.layer.v1.tar"}),", ",(0,a.jsx)(i.code,{children:"application/vnd.oci.image.layer.v1.tar+gzip"}),", ",(0,a.jsx)(i.code,{children:"application/vnd.oci.image.layer.v1.tar+zstd"}),")"]}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"pushing-models-to-a-registry",children:"Pushing models to a registry"}),"\n",(0,a.jsxs)(i.p,{children:["Due to current BuildKit limitations, we can not push directly to a remote registry at this time. You must first output to a local OCI layout, then use a tool like ",(0,a.jsx)(i.a,{href:"https://github.com/oras-project/oras",children:(0,a.jsx)(i.code,{children:"oras"})})," or ",(0,a.jsx)(i.a,{href:"https://github.com/containers/skopeo",children:(0,a.jsx)(i.code,{children:"skopeo"})})," to copy the image to a remote registry."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-shell",children:"export REGISTRY=docker.io/youruser/qwen3:0.6b\n\n# using oras\noras cp --from-oci-layout qwen/layout:qwen3 $REGISTRY\n\n# using skopeo\nskopeo copy oci:qwen/layout docker://$REGISTRY\n"})}),"\n",(0,a.jsx)(i.h2,{id:"pulling-models-from-a-registry",children:"Pulling models from a registry"}),"\n",(0,a.jsxs)(i.p,{children:["If you want to pull the raw model files, you can pull OCI artifacts using tools like ",(0,a.jsx)(i.a,{href:"https://github.com/oras-project/oras",children:(0,a.jsx)(i.code,{children:"oras"})})," or ",(0,a.jsx)(i.a,{href:"https://github.com/containers/skopeo",children:(0,a.jsx)(i.code,{children:"skopeo"})}),"."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-shell",children:'export REGISTRY=docker.io/youruser/qwen3:0.6b\n\n# using oras\n# oras will automatically preserve file names based on annotations\noras pull $REGISTRY --output path/to/qwen3/\n\n# using skopeo\nskopeo copy docker://$REGISTRY dir://path/to/qwen3/\n# then rename files based on annotations\nfor digest in $(jq -r \'.layers[].digest\' manifest.json); do\n  name=$(jq -r --arg digest "$digest" \'.layers[] | select(.digest==$digest) | .annotations["org.cncf.model.filepath"]\' manifest.json)\n  if [ "$name" != "null" ]; then\n    mv "${digest#sha256:}" "$name"\n  fi\ndone\n'})}),"\n",(0,a.jsx)(i.h2,{id:"private-hugging-face-models",children:"Private Hugging Face Models"}),"\n",(0,a.jsxs)(i.p,{children:["You can provide a Hugging Face token for private model access using ",(0,a.jsx)(i.a,{href:"https://docs.docker.com/build/building/secrets/",children:"Docker build secrets"}),"."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-shell",children:'export HF_TOKEN=<your_huggingface_token>\n\ndocker buildx build \\\n  --secret id=hf-token,env=HF_TOKEN \\\n  --build-arg BUILDKIT_SYNTAX=ghcr.io/kaito-project/aikit/aikit:latest \\\n  --target packager/modelpack \\\n  --build-arg source=huggingface://meta-llama/Llama-3.2-1B \\\n  --build-arg name=llama \\\n  --build-arg exclude="\'original/**\'" \\\n  --output=llama -<<<""\n'})}),"\n",(0,a.jsxs)(i.h2,{id:"download-exclusions---build-arg-exclude",children:["Download exclusions (",(0,a.jsx)(i.code,{children:"--build-arg exclude="}),")"]}),"\n",(0,a.jsxs)(i.p,{children:["When downloading from Hugging Face, you can specify files or directories to exclude using the ",(0,a.jsx)(i.code,{children:"--build-arg exclude="})," option. This is useful for omitting unnecessary files from the download process. Exclusions use glob patterns and should be provided as a single string with space-separated patterns."]}),"\n",(0,a.jsxs)(i.p,{children:["For example, to exclude the ",(0,a.jsx)(i.code,{children:"original"})," and ",(0,a.jsx)(i.code,{children:"metal"})," directories, you can use the following command:"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-shell",children:"--build-arg exclude=\"'original/*' 'metal/*'\"\n"})}),"\n",(0,a.jsx)(i.h2,{id:"whats-next",children:"What's next?"}),"\n",(0,a.jsxs)(i.p,{children:["\ud83d\udc49 Now that you have packaged your model as an OCI artifact, you can refer to ",(0,a.jsx)(i.a,{href:"/aikit/docs/create-images#oci-artifacts",children:"Creating Model Images"})," on how to create an image with AIKit to use for inference!"]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>t});var a=n(6540);const s={},r=a.createContext(s);function o(e){const i=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:i},e.children)}}}]);