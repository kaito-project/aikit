"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[338],{6679:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var n=t(4848),r=t(8453);const i={title:"Release Process"},o=void 0,a={id:"release",title:"Release Process",description:"The release process is as follows:",source:"@site/docs/release.md",sourceDirName:".",slug:"/release",permalink:"/aikit/docs/release",draft:!1,unlisted:!1,editUrl:"https://github.com/sozercan/aikit/blob/main/website/docs/docs/release.md",tags:[],version:"current",frontMatter:{title:"Release Process"},sidebar:"sidebar",previous:{title:"Architecture",permalink:"/aikit/docs/architecture"}},l={},c=[];function d(e){const s={a:"a",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"The release process is as follows:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:["Trigger the ",(0,n.jsx)(s.a,{href:"https://github.com/sozercan/aikit/actions/workflows/release-pr.yaml",children:"release-pr action"})," with the version to release to create a release PR. Merge the PR to the applicable ",(0,n.jsx)(s.code,{children:"release-X.Y"})," branch."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:["Tag the ",(0,n.jsx)(s.code,{children:"release-X.Y"})," branch with a version number that's semver compliant (vMAJOR.MINOR.PATCH), and push the tag to GitHub."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"git tag v0.1.0\ngit push origin v0.1.0\n"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:["GitHub Actions will automatically build the AIKit image and push the versioned and ",(0,n.jsx)(s.code,{children:"latest"})," tag to GitHub Container Registry (GHCR) using ",(0,n.jsx)(s.a,{href:"https://github.com/sozercan/aikit/actions/workflows/release.yaml",children:"release action"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:["Once release is done, trigger ",(0,n.jsx)(s.a,{href:"https://github.com/sozercan/aikit/actions/workflows/update-models.yaml",children:"update models"})," action to update the pre-built models."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:["Mixtral 8x7b and Llama 3 70b models does not fit into GitHub runners due to their size. Trigger self-hosted ",(0,n.jsx)(s.a,{href:"https://github.com/sozercan/aikit/actions/workflows/update-models-self.yaml",children:"update models"})," action to update these pre-built models."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var n=t(6540);const r={},i=n.createContext(r);function o(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);