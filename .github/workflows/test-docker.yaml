name: docker-test

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

permissions: read-all

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 240
    strategy:
      fail-fast: false
      matrix:
        backend:
          - llama
          - stablediffusion
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          egress-policy: audit

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: cleanup disk space
        run: |
          docker system prune -f -a --volumes
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      # need containerd image store for testing local images
      - uses: crazy-max/ghaction-setup-docker@69b561f709cbd934060981d481ccfc316cfb77b7 # v2.2.0
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }
      - uses: crazy-max/ghaction-github-runtime@b3a9207c0e1ef41f4cf215303c976869d0c2c1c4 # v3.0.0

      - name: build aikit
        run: |
          docker buildx build . -t aikit:test \
            --load --progress plain \
            --cache-from=type=gha,scope=aikit \
            --cache-to=type=gha,scope=aikit,mode=max

      - name: build test model
        run: |
          docker buildx build . -t testmodel:test \
            -f test/aikitfile-${{ matrix.backend }}.yaml \
            --load --progress plain \
            --cache-from=type=gha,scope=testmodel \
            --cache-to=type=gha,scope=testmodel,mode=max

      - name: list images
        run: docker images

      - name: run test model
        run: docker run --name testmodel -d -p 8080:8080 testmodel:test

      - name: install e2e dependencies
        run: make test-e2e-dependencies

      - name: run llama test
        if: matrix.backend == 'llama'
        run: |
          curl http://127.0.0.1:8080/v1/chat/completions -H "Content-Type: application/json" -d '{
            "model": "llama-2-7b-chat",
            "messages": [{"role": "user", "content": "explain kubernetes in a sentence"}]
          }'

      - name: run stablediffusion test
        if: matrix.backend == 'stablediffusion'
        run: |
          curl http://127.0.0.1:8080/v1/images/generations -H "Content-Type: application/json" -d '{
            "prompt": "A cute baby llama",
            "size": "256x256"
          }'

      - name: save logs
        if: always()
        run: docker logs testmodel > /tmp/docker-${{ matrix.backend }}.log

      - name: save generated image
        if: matrix.backend == 'stablediffusion'
        run: docker cp testmodel:/tmp/generated/images /tmp

      - name: publish test artifacts
        if: always()
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
        with:
          name: test-${{ matrix.backend }}
          path: |
            /tmp/*.log
            /tmp/images/*.png

