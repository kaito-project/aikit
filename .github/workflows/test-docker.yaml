name: docker-test

on:
  push:
    paths-ignore:
      - '**.md'
      - 'website/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'website/**'

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 240
    strategy:
      fail-fast: false
      matrix:
        backend:
          - llama
        arch:
          - amd64
          - arm64
    steps:
      - uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
          allowed-endpoints: >
            auth.docker.io:443
            huggingface.co:443
            *.huggingface.co:443
            *.hf.co:443
            cdn.dl.k8s.io:443
            dl.k8s.io:443
            download.docker.com:443
            gcr.io:443
            github.com:443
            *.githubusercontent.com:443
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            registry-1.docker.io:443
            storage.googleapis.com:443
            *.blob.core.windows.net:443
            *.azureedge.net:443
            developer.download.nvidia.com:443
            dl-cdn.alpinelinux.org:443
            *.ubuntu.com:80
            ghcr.io:443
            sum.golang.org:443
            quay.io:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # need containerd image store for testing local images
      - uses: crazy-max/ghaction-setup-docker@b60f85385d03ac8acfca6d9996982511d8620a19 # v4.3.0
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }
      - uses: crazy-max/ghaction-github-runtime@3cb05d89e1f492524af3d41a1c98c83bc3025124 # v3.1.0
      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        if: ${{ matrix.arch == 'arm64' }}

      - name: build aikit
        run: |
          docker buildx build . -t aikit:test \
            --load --provenance=false --progress plain \
            --cache-from=type=gha,scope=aikit-${{ matrix.arch }} \
            --cache-to=type=gha,scope=aikit-${{ matrix.arch }},mode=max \
            --platform linux/${{ matrix.arch }}

      - name: build test model
        run: |
          docker buildx build . -t testmodel:test \
            -f test/aikitfile-${{ matrix.backend }}.yaml \
            --load --provenance=false --progress plain \
            --cache-from=type=gha,scope=testmodel-${{ matrix.arch }} \
            --cache-to=type=gha,scope=testmodel-${{ matrix.arch }},mode=max \
            --platform linux/${{ matrix.arch }}

      - name: list images
        run: docker images

      - name: run test model
        run: docker run --name testmodel -d -p 8080:8080 --platform "linux/${{ matrix.arch }}" testmodel:test

      - name: run llama test
        if: matrix.backend == 'llama'
        run: |
          result=$(curl --fail --retry 10 --retry-all-errors http://127.0.0.1:8080/v1/chat/completions -H "Content-Type: application/json" -d '{
            "model": "llama-3.2-1b-instruct",
            "messages": [{"role": "user", "content": "explain kubernetes in a sentence"}]
          }')
          echo $result

          choices=$(echo "$result" | jq '.choices')
          if [ -z "$choices" ]; then
            exit 1
          fi

      - name: save logs
        if: always()
        run: docker logs testmodel > /tmp/docker-${{ matrix.backend }}.log

      - name: publish test artifacts
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-${{ matrix.arch }}-${{ matrix.backend }}
          path: |
            /tmp/*.log
            /tmp/images/*.png

  test-protocol:
    runs-on: ubuntu-latest
    timeout-minutes: 240
    strategy:
      fail-fast: false
      matrix:
        protocol:
          - oci
          - hf
    steps:
      - uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
          allowed-endpoints: >
            auth.docker.io:443
            huggingface.co:443
            *.huggingface.co:443
            *.hf.co:443
            cdn.dl.k8s.io:443
            dl.k8s.io:443
            download.docker.com:443
            gcr.io:443
            github.com:443
            *.githubusercontent.com:443
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            registry-1.docker.io:443
            storage.googleapis.com:443
            *.blob.core.windows.net:443
            *.azureedge.net:443
            *.ubuntu.com:80
            developer.download.nvidia.com:443
            dl-cdn.alpinelinux.org:443
            registry.ollama.ai:443
            *.cloudflarestorage.com:443
            ghcr.io:443
            sum.golang.org:443
            quay.io:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # need containerd image store for testing local images
      - uses: crazy-max/ghaction-setup-docker@b60f85385d03ac8acfca6d9996982511d8620a19 # v4.3.0
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }
      - uses: crazy-max/ghaction-github-runtime@3cb05d89e1f492524af3d41a1c98c83bc3025124 # v3.1.0

      - name: build aikit
        run: |
          docker buildx build . -t aikit:test \
            --load --provenance=false --progress plain \
            --cache-from=type=gha,scope=aikit-amd64 \
            --cache-to=type=gha,scope=aikit-amd64,mode=max

      - name: build test model
        run: |
          docker buildx build . -t testmodel:test \
            -f test/aikitfile-${{ matrix.protocol }}.yaml \
            --load --provenance=false --progress plain \
            --cache-from=type=gha,scope=testmodel-${{ matrix.protocol }} \
            --cache-to=type=gha,scope=testmodel-${{ matrix.protocol }},mode=max

      - name: list images
        run: docker images

      - name: run test model
        run: docker run --name testmodel -d -p 8080:8080 testmodel:test

      - name: run llama test
        run: |
          result=$(curl --fail --retry 10 --retry-all-errors http://127.0.0.1:8080/v1/chat/completions -H "Content-Type: application/json" -d '{
            "model": "llama-3.2-1b-instruct",
            "messages": [{"role": "user", "content": "explain kubernetes in a sentence"}]
          }')
          echo $result

          choices=$(echo "$result" | jq '.choices')
          if [ -z "$choices" ]; then
            exit 1
          fi

      - name: save logs
        if: always()
        run: docker logs testmodel > /tmp/docker-${{ matrix.protocol }}.log

      - name: publish test artifacts
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-${{ matrix.protocol }}
          path: |
            /tmp/*.log
