name: patch-models
on:
  # patch weekly
  # schedule:
  #   - cron: "0 0 * * 0"
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
    patch-models:
        runs-on: ubuntu-latest
        timeout-minutes: 240
        strategy:
          fail-fast: false
          matrix:
            images:
              - ghcr.io/sozercan/llama2:7b
              - ghcr.io/sozercan/llama2:7b-cuda
              - ghcr.io/sozercan/llama2:13b
              - ghcr.io/sozercan/llama2:13b-cuda
              - ghcr.io/sozercan/orca2:13b
              - ghcr.io/sozercan/orca2:13b-cuda
              - ghcr.io/sozercan/mixtral:8x7b
              - ghcr.io/sozercan/mixtral:8x7b-cuda
              - ghcr.io/sozercan/phi2:2.7b
              - ghcr.io/sozercan/phi2:2.7b-cuda

        steps:
        - name: Harden Runner
          uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
          with:
            egress-policy: audit

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

        - name: Login to GHCR
          uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Generate Trivy Report
          uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca # 0.16.1
          with:
            timeout: 60m
            scan-type: 'image'
            format: 'json'
            output: 'report.json'
            ignore-unfixed: true
            vuln-type: 'os'
            image-ref: ${{ matrix.images }}

        - name: Check vulnerability count
          id: vuln_count
          run: |
            cat report.json | jq
            vuln_count=$(jq '.Results[0].Vulnerabilities | length' report.json)
            echo "vuln_count=$vuln_count" >> $GITHUB_OUTPUT

        - name: Copa Action
          if: steps.vuln_count.outputs.vuln_count != '0'
          id: copa
          uses: project-copacetic/copa-action@04fbe0ef30896b3fef2280aa86365589cc524304 # v1.0.1
          with:
            image: ${{ matrix.images }}
            image-report: 'report.json'
            patched-tag: 'patched'

        - name: Install Cosign
          uses: sigstore/cosign-installer@9614fae9e5c5eddabb09f90a270fcb487c9f7149 # v3.3.0

        - name: Docker Push Patched Image
          if: steps.copa.conclusion == 'success'
          run: |
            docker tag ${{ steps.copa.outputs.patched-image }} ${{ matrix.images }}
            docker images
            docker push ${{ matrix.images }}
            echo "DIGEST=$(cosign triangulate ${{ matrix.images }} --type digest)" >> $GITHUB_ENV

        - name: Sign the images with GitHub OIDC Token
          run: cosign sign --yes ${DIGEST}

        - name: Verify image signature
          run: |
            cosign verify ${DIGEST} \
              --certificate-oidc-issuer https://token.actions.githubusercontent.com \
              --certificate-identity-regexp 'https://github\.com/sozercan/aikit/\.github/workflows/.+'
