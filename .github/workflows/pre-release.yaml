name: pre-release

on:
  workflow_dispatch: # used for testing
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  pre-release:
    permissions:
      contents: write
      packages: write
      id-token: write
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
          allowed-endpoints: >
            auth.docker.io:443
            fulcio.sigstore.dev:443
            ghcr.io:443
            github.com:443
            *.githubusercontent.com:443
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            registry-1.docker.io:443
            rekor.sigstore.dev:443
            storage.googleapis.com:443
            tuf-repo-cdn.sigstore.dev:443
            sum.golang.org:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: Install Cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to GHCR
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set LDFLAGS
        run: |
          set -x
          GIT_COMMIT=$(git rev-list --abbrev-commit --tags --max-count=1)
          GIT_TAG=$(git describe --abbrev=0 --tags ${GIT_COMMIT} 2>/dev/null)
          echo LDFLAGS="-X github.com/kaito-project/aikit/pkg/version.Version=${GIT_TAG}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: build-and-push
        with:
          push: true
          tags: ghcr.io/kaito-project/aikit/aikit:dev
          cache-from: type=gha,scope=aikit
          cache-to: type=gha,scope=aikit,mode=max
          sbom: true
          provenance: true
          build-args: |
            LDFLAGS=${{ env.LDFLAGS }}
          platforms: linux/amd64,linux/arm64
        env:
          LDFLAGS: ${{ env.LDFLAGS }}

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: cosign sign --yes "ghcr.io/kaito-project/aikit/aikit@${DIGEST}"

      - name: Verify image signature
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          cosign verify ghcr.io/kaito-project/aikit/aikit@${DIGEST} \
            --certificate-oidc-issuer https://token.actions.githubusercontent.com \
            --certificate-identity https://github.com/kaito-project/aikit/.github/workflows/pre-release.yaml@refs/heads/main
