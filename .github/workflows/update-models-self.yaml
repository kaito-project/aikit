name: update-models-self

on:
  workflow_dispatch:
    inputs:
      staging:
        description: 'push to test registry'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
 update-models-self:
    strategy:
      fail-fast: false
      matrix:
        model:
         - llama-3.1-70b-instruct
         - mixtral-8x7b-instruct
         - codestral-22b
    runs-on: self-hosted
    timeout-minutes: 360
    steps:
      - name: cleanup workspace
        run: |
          rm -rf ./* || true
          rm -rf ./.??* || true

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Cosign
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1
      - uses: crazy-max/ghaction-github-runtime@b3a9207c0e1ef41f4cf215303c976869d0c2c1c4 # v3.0.0

      - name: Login to GHCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: parse matrix
        run: |
          echo "MODEL_NAME=$(echo ${{ matrix.model }} | sed -E 's/^llama-(3\.[12])-([0-9]+\.?[0-9]*b)-.*/llama\1/;t; s/^flux-([0-9]+)-dev$/flux\1/;t; s/^phi-(3\.5)-([0-9]+\.?[0-9]*b)-.*/phi\1/;t; s/^([a-z]+)-([0-9]+x[0-9]+b|[0-9]+\.?[0-9]*b)-.*/\1/; s/^([a-z]+)-([0-9]+)-.*/\1\2/; s/^([a-z]+)-([0-9]+\.?[0-9]*b)$/\1/')" >> $GITHUB_ENV

          echo "MODEL_SIZE=$(echo ${{ matrix.model }} | sed -E 's/^llama-(3\.[12])-([0-9]+\.?[0-9]*b)-.*/\2/;t; s/^flux-[0-9]+-dev$/dev/;t; s/^[a-z]+-([0-9]+x[0-9]+b|[0-9]+\.?[0-9]*b)-.*/\1/; s/^[a-z]+-[0-9]+(\.[0-9]+)?-([0-9]+\.?[0-9]*b).*/\2/; s/^[a-z]+-([0-9]+\.?[0-9]*b)$/\1/')" >> $GITHUB_ENV

          echo "MODEL_TYPE=-$(echo ${{ matrix.model }} | sed -n -e 's/^flux-[0-9]+-\(dev\)$/\1/p' -e 's/.*\(chat\).*/\1/p' -e 's/.*\(instruct\).*/\1/p')" >> $GITHUB_ENV

      - name: Build and push
        run: |
          if [ "${MODEL_TYPE}" == "-" ]; then
            export MODEL_TYPE=""
            echo "MODEL_TYPE=''" >> $GITHUB_ENV
          fi

          if ${{ inputs.staging }}; then
            export REGISTRY=ghcr.io/sozercan/test
          else
            export REGISTRY=ghcr.io/sozercan
          fi

          docker buildx build . \
            -t ${REGISTRY}/${MODEL_NAME}:${MODEL_SIZE} \
            -t ${REGISTRY}/${MODEL_NAME}:${MODEL_SIZE}${MODEL_TYPE} \
            -f models/${{ matrix.model }}.yaml \
            --push --progress plain \
            --sbom=true --provenance=true \
            --platform linux/amd64,linux/arm64
          echo "DIGEST=$(cosign triangulate ${REGISTRY}/${MODEL_NAME}:${MODEL_SIZE} --type digest)" >> $GITHUB_ENV

      - name: Sign the images with GitHub OIDC Token
        if: ${{ !inputs.staging }}
        run: cosign sign --yes ${DIGEST}

      - name: Verify image signature
        if: ${{ !inputs.staging }}
        run: |
          cosign verify ${DIGEST} \
            --certificate-oidc-issuer https://token.actions.githubusercontent.com \
            --certificate-identity-regexp 'https://github\.com/sozercan/aikit/\.github/workflows/.+'
