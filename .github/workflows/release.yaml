name: release

on:
  workflow_dispatch:
  # push:
  #   tags:
  #     - v*

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            auth.docker.io:443
            fulcio.sigstore.dev:443
            ghcr.io:443
            github.com:443
            objects.githubusercontent.com:443
            pkg-containers.githubusercontent.com:443
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            registry-1.docker.io:443
            rekor.sigstore.dev:443
            storage.googleapis.com:443
            tuf-repo-cdn.sigstore.dev:443

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install Cosign
        uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 # v3.4.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@0d103c3126aa41d772a8362f6aa67afac040f80c # v3.1.0
      - uses: crazy-max/ghaction-github-runtime@b3a9207c0e1ef41f4cf215303c976869d0c2c1c4 # v3.0.0

      - name: Login to GHCR
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: docker_meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ghcr.io/sozercan/aikit
          tags: type=semver,pattern={{raw}}

      - name: set LDFLAGS
        run: |
          set -x
          GIT_COMMIT=$(git rev-list --abbrev-commit --tags --max-count=1)
          GIT_TAG=$(git describe --abbrev=0 --tags ${GIT_COMMIT} 2>/dev/null || true)
          echo LDFLAGS="-X github.com/sozercan/aikit/pkg/version.Version=${GIT_TAG:%=%}" >> $GITHUB_ENV
          echo $LDFLAGS

      - name: Build and push
        uses: docker/build-push-action@af5a7ed5ba88268d5278f7203fb52cd833f66d6e # v5.2.0
        id: build-and-push
        with:
          # push: false
          push: true
          tags: |
            ${{ steps.docker_meta.outputs.tags }}
            ghcr.io/sozercan/aikit:latest
          cache-from: type=gha,scope=aikit
          cache-to: type=gha,scope=aikit,mode=max
          sbom: true
          provenance: true

      # - name: Sign the images with GitHub OIDC Token
      #   env:
      #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
      #   run: cosign sign --yes "ghcr.io/sozercan/aikit@${DIGEST}"

      # - name: Verify image signature
      #   env:
      #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
      #   run: |
      #     cosign verify ghcr.io/sozercan/aikit@${DIGEST} \
      #       --certificate-oidc-issuer https://token.actions.githubusercontent.com \
      #       --certificate-identity https://github.com/sozercan/aikit/.github/workflows/release.yaml@$GITHUB_REF

      # - name: Create GitHub release
      #   uses: marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0 # v1.2.1
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     prerelease: false
