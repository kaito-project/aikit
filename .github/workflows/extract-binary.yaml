name: extract-binary

on:
  workflow_dispatch:
    inputs:
      localai_version:
        description: 'Version of local-ai container to extract artifacts from'
        required: true

permissions:
  packages: write

jobs:
  extract-binary:
    runs-on: ubuntu-latest
    timeout-minutes: 240
    steps:
      - uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-docker-images: 'true'
          remove-codeql: 'true'
          remove-haskell: 'true'
          remove-android: 'true'

      - name: install oras
        env:
          ORAS_VERSION: 1.1.0
        run: |
          curl -sLO "https://github.com/oras-project/oras/releases/download/v${ORAS_VERSION}/oras_${ORAS_VERSION}_linux_amd64.tar.gz"
          tar -zxvf oras_${ORAS_VERSION}_linux_amd64.tar.gz -C /usr/local/bin/ oras

      - name: install crane
        env:
          CRANE_VERSION: 0.17.0
        run: |
          curl -sLO "https://github.com/google/go-containerregistry/releases/download/v${CRANE_VERSION}/go-containerregistry_Linux_x86_64.tar.gz"
          tar -zxvf go-containerregistry_Linux_x86_64.tar.gz -C /usr/local/bin/ crane

      - name: extract artifacts from local-ai container
        run: |
          crane export quay.io/go-skynet/local-ai:${{ github.event.inputs.localai_version }}-cublas-cuda12-core > export.tar
          tar -xvf export.tar build

      - name: Login to GHCR
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: create and push oci artifact
        run: |
          oras push ghcr.io/sozercan/test/local-ai:${{ github.event.inputs.localai_version }}-cublas-cuda12-core \
            build/local-ai:application/octet-stream \
            build/backend-assets/:application/octet-stream

      - name: publish artifacts
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
        with:
          name: artifacts
          path: |
            build/local-ai
            build/backend-assets/grpc/stablediffusion
