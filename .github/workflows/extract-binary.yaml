name: extract-binary

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

permissions:
  # contents: write
  packages: write

jobs:
  extract-binary:
    strategy:
      fail-fast: true
      matrix:
        build-type:
          - cublas-cuda12
    runs-on: ubuntu-latest
    timeout-minutes: 240
    steps:
      - name: cleanup disk space
        run: |
          docker system prune -f -a --volumes
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: install oras
        env:
          ORAS_VERSION: 1.1.0
        run: |
          curl -sL "https://github.com/oras-project/oras/releases/download/v${ORAS_VERSION}/oras_${ORAS_VERSION}_linux_amd64.tar.gz
          tar -zxvf oras_${ORAS_VERSION}_linux_amd64.tar.gz -C /usr/local/bin/ oras

      - name: install crane
        env:
          CRANE_VERSION: 0.17.0
        run: |
          curl -sL "https://github.com/google/go-containerregistry/releases/download/v${CRANE_VERSION}/go-containerregistry_Linux_x86_64.tar.gz" > go-containerregistry.tar.gz
          tar -zxvf go-containerregistry.tar.gz -C /usr/local/bin/ crane

      - name: extract local-ai gpu binary
        run: |
          crane export quay.io/go-skynet/local-ai:v2.0.0-cublas-cuda12 > /tmp/localai.tar
          tar -xvf /tmp/localai.tar -C /tmp/

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: create and push oci artifact
        run: |
          oras push ghcr.io/sozercan/localai:v2.0.0-cublas-cuda12 :application/octet-stream

